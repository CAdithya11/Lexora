name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mongodb-version: ['8.0']

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: lexoraDB
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.12.0
        with: 
          mongodb-version: ${{ matrix.mongodb-version }}

      - name: Setup JDK 21
        uses: actions/setup-java@v3.14.1
        with: 
          java-version: 21
          distribution: temurin

      # This creates the machine-readable format .class file inside a .jar container
      # Bcz with github actions there is no compiler do it automatically
      - name: Build the project
        working-directory: backend # Just like cd backend
        run: mvn clean package --no-transfer-progress 

      - name: Run Spring boot application
        working-directory: backend # Just like cd backend
        run: nohup java -jar target/*.jar & # Runs the whole command in the background
        # nohup stands for no hang up

      - name: waiting for springboot to start
        run: |
          echo "Waiting to springboot to become healthy"
          for i in {1..30}; do
            if curl -s http://localhost:8080/actuator/health | grep UP; then
              echo "Spring Boot is up!"
              break
            fi
            echo "Waiting..."
            sleep 5
          done
        # curl -s Sends an HTTP GET request silently. get a json like {"status":"UP"}
        # fi - End of the if statment. Not Else 

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.9.1
        with:
          node-version: '20'

      - name: Install frontend dependancies
        working-directory: ./Frontend
        run: npm ci --legacy-peer-deps # npm ci is faster than npm install

      - name: Build frontend
        working-directory: ./Frontend
        run: npm run build

      - name: Serve frontend
        working-directory: ./Frontend
        run: |
          npm install -g serve
          nohup serve -s dist -l 5173 &

      - name: waiting for frontend to start
        run: |
          echo "Waiting for frontend to become ready"
          for i in {1..30}; do
            if curl -s http://localhost:5173 | grep Lexora; then
              echo "Frontend is ready!"
              break
            fi
            echo "Waiting..."
            sleep 5
          done

      - name: Install Chrome for Selenium
        run: |
          sudo apt update
          sudo apt install -y wget unzip xvfb libxi6 libgconf-2-4 libnss3 libxss1 libappindicator1 libindicator7
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb || sudo apt-get -f install -y

      - name: Run JUnit tests
        working-directory: backend
        run: mvn test
